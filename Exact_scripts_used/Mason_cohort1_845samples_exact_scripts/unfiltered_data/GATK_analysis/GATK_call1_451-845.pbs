#!/bin/bash
#
#PBS -S /bin/bash
#PBS -l select=1:ncpus=24:model=has
#PBS -l walltime=72:00:00
#PBS -N COVIRT_GATK_call1_all-reads
#PBS -q covid19
#PBS -J 451-845
#PBS -m abe
#PBS -j oe
#PBS -koed

cd $PBS_O_WORKDIR

start=$(date +%s)
echo "start time: $start"
echo "ran on node: "
cat $PBS_NODEFILE
echo "My PBS_ARRAY_INDEX_ID: " $PBS_ARRAY_INDEX

gatk_path=/path/to/anaconda3/envs/COVIRT_GATK/bin
in_dir=/path/to/02-AlignedData
inter_dir=/path/to/GATK_analysis/03-GATKIntermediates
out_dir=/path/to/GATK_analysis/04-GATKOutput


sample=$(cat samples.txt | sed -n ${PBS_ARRAY_INDEX}p)

mkdir $inter_dir/${sample}
mkdir $out_dir/${sample}


echo "SAMPLE: ${sample}"


call1a='$gatk_path/gatk MarkDuplicates -I $in_dir/${sample}/${sample}_Aligned.sortedByCoord_sorted.out.bam -O $inter_dir/${sample}/${sample}_marked_duplicates.bam -M $inter_dir/${sample}/${sample}_marked_dup_metrics.txt'

echo $call1a
eval $call1a


call1b='samtools index -@ 24 $inter_dir/${sample}/${sample}_marked_duplicates.bam'

echo $call1b
eval $call1b

end=$(date +%s)
echo "end time: $end"
runtime_s=$(echo $(( end - start )))
echo "total run time(s): $runtime_s"
sec_per_min=60
sec_per_hr=3600
runtime_m=$(echo "scale=2; $runtime_s / $sec_per_min;" | bc)
echo "total run time(m): $runtime_m"
runtime_h=$(echo "scale=2; $runtime_s / $sec_per_hr;" | bc)
echo "total run time(h): $runtime_h"
